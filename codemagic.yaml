workflows:
  android-workflow:
    name: Android Debug Build
    instance_type: mac_mini_m1
    max_build_duration: 60
    environment:
      java: 17
      vars:
        PACKAGE_NAME: "io.github.uditkarode.able"
    scripts:
      - name: Check directory structure
        script: |
          echo "Root directory: $(pwd)"
          ls -la
      - name: Navigate to project directory
        script: |
          cd AbleMusicPlayer-master
          echo "Project directory: $(pwd)"
          ls -la
      - name: Set up local properties
        script: |
          cd AbleMusicPlayer-master
          echo "sdk.dir=$ANDROID_SDK_ROOT" > "local.properties"
      - name: Locate and modify NewPipeExtractor dependency
        script: |
          cd AbleMusicPlayer-master
          # Find files referring to the problematic dependency
          echo "Files using NewPipeExtractor:"
          find . -name "*.gradle*" -exec grep -l "NewPipeExtractor" {} \;
          
          # Find all build.gradle files in core:services that might have the dependency
          SERVICES_BUILD_GRADLE=$(find . -path "*core/services*" -name "build.gradle.kts")
          echo "Services build.gradle.kts: $SERVICES_BUILD_GRADLE"
          
          if [ -n "$SERVICES_BUILD_GRADLE" ]; then
            echo "Original content of $SERVICES_BUILD_GRADLE:"
            cat "$SERVICES_BUILD_GRADLE"
            
            # Create a backup
            cp "$SERVICES_BUILD_GRADLE" "${SERVICES_BUILD_GRADLE}.bak"
            
            # Temporarily comment out the problematic dependency
            sed -i.bak 's/implementation("com.github.TeamNewPipe:NewPipeExtractor:.*/\/\/ Temporarily commented out for test build: &/' "$SERVICES_BUILD_GRADLE"
            
            echo "Modified content of $SERVICES_BUILD_GRADLE:"
            cat "$SERVICES_BUILD_GRADLE"
          fi
      - name: Create test stub class if needed
        script: |
          cd AbleMusicPlayer-master
          
          # Find Java/Kotlin files that import NewPipeExtractor classes
          echo "Files importing NewPipeExtractor:"
          find . -name "*.java" -o -name "*.kt" | xargs grep -l "import.*NewPipe" || echo "No direct imports found"
          
          # Create empty service directory for stubs if needed
          mkdir -p core/services/src/main/java/org/schabi/newpipe/extractor
          
          # Create a minimal stub class to satisfy imports during compilation
          cat << 'EOFJAVA' > core/services/src/main/java/org/schabi/newpipe/extractor/NewPipe.java
          package org.schabi.newpipe.extractor;
          
          // This is a stub class for building test version without actual NewPipeExtractor
          public class NewPipe {
              public static NewPipe getInstance() {
                  return new NewPipe();
              }
              
              // Add stub methods as needed
              public void init() {}
          }
          EOFJAVA
      - name: Build simplified test version
        script: |
          cd AbleMusicPlayer-master
          chmod +x ./gradlew
          # Try to build only the debug variant with reduced functionality
          ./gradlew app:assembleDebug -x lint -x test --stacktrace --info
    artifacts:
      - AbleMusicPlayer-master/app/build/outputs/apk/debug/*.apk
    publishing:
      email:
        recipients:
          - myntrasinghania@gmail.com 